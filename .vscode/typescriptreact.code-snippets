{
    "Font Awesome Icon": {
        "body": [
            "<FontAwesomeIcon icon={fa${1:IconName}} />"
        ],
        "prefix": "fa"
    },
    "OTP Input": {
        "body": [
            "<input",
            "  type=\"text\"",
            "  autoComplete=\"one-time-code\"",
            "  inputMode=\"numeric\"",
            "  maxLength={6}",
            "  pattern=\"\\d{6}\"",
            "  onFocus={() => {",
            "    navigator.credentials",
            "      .get({",
            "        otp: { transport: ['sms'] }",
            "      })",
            "      .then((otp) => {",
            "        const input = document.querySelector('input[autoComplete=\"one-time-code\"]');",
            "        if (input && otp) {",
            "          (input as HTMLInputElement).value = otp.code;",
            "        }",
            "      })",
            "      .catch((err) => {",
            "        console.error('Failed to get OTP:', err);",
            "      });",
            "  }}",
            "/>"
        ],
        "description": "Generates an OTP input field with automatic value retrieval on focus.",
        "prefix": "input:otp"
    },
    "React Functional Component": {
        "body": [
            "const ${TM_FILENAME_BASE} = () => {",
            "\treturn (",
            "\t\t<>",
            "\t\t\t$0",
            "\t\t</>",
            "\t);",
            "};",
            "",
            "export default ${TM_FILENAME_BASE};"
        ],
        "prefix": "rfc"
    },
    "React useEffect Hook": {
        "body": [
            "\tuseEffect(() => {",
            "\t\t$0",
            "\t}, []);"
        ],
        "prefix": "ue"
    },
    "React useState Hook": {
        "body": [
            "const [${1:state}, set${1/(^\\w)(\\w*)/${1:/upcase}${2}/}] = useState<${2:string}>($3);",
            "$0"
        ],
        "prefix": "us"
    }
}